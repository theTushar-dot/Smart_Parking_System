$date
	Mon Jan 04 01:27:50 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_parking_system $end
$var wire 1 ! RED_LED $end
$var wire 7 " HEX_2 [6:0] $end
$var wire 7 # HEX_1 [6:0] $end
$var wire 1 $ GREEN_LED $end
$var reg 1 % clk $end
$var reg 4 & password_1 [3:0] $end
$var reg 4 ' password_2 [3:0] $end
$var reg 8 ( password_3 [7:0] $end
$var reg 8 ) password_4 [7:0] $end
$var reg 4 * password_5 [3:0] $end
$var reg 4 + password_6 [3:0] $end
$var reg 4 , password_7 [3:0] $end
$var reg 1 - reset_n $end
$var reg 1 . sensor_entrance $end
$var reg 1 / sensor_exit $end
$scope module uut $end
$var wire 1 $ GREEN_LED $end
$var wire 1 ! RED_LED $end
$var wire 1 % clk $end
$var wire 4 0 password_1 [3:0] $end
$var wire 4 1 password_2 [3:0] $end
$var wire 8 2 password_3 [7:0] $end
$var wire 8 3 password_4 [7:0] $end
$var wire 4 4 password_5 [3:0] $end
$var wire 4 5 password_6 [3:0] $end
$var wire 4 6 password_7 [3:0] $end
$var wire 1 - reset_n $end
$var wire 1 . sensor_entrance $end
$var wire 1 / sensor_exit $end
$var reg 7 7 HEX_1 [6:0] $end
$var reg 7 8 HEX_2 [6:0] $end
$var reg 32 9 counter_wait [31:0] $end
$var reg 3 : current_state [2:0] $end
$var reg 1 ; green_tmp $end
$var reg 3 < next_state [2:0] $end
$var reg 1 = red_tmp $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
x=
bx <
x;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
x/
x.
1-
bx ,
bx +
bx *
bx )
bx (
bx '
bx &
0%
x$
bx #
bx "
x!
$end
#1
b0 9
b1 <
b0 :
1.
0-
#6
b1 9
b10 <
b101011 "
b101011 8
b110 #
b110 7
1!
1=
0$
0;
b1 :
1-
1%
#7
0%
#17
b10 9
b11 <
b110 "
b110 8
0!
0=
b10 :
b1 ,
b1 6
b110 +
b110 5
b110 *
b110 4
b1000001 )
b1000001 3
b1010100 (
b1010100 2
b110 '
b110 1
b10 &
b10 0
1%
#18
0%
#19
b0 9
b1000000 "
b1000000 8
b10 #
b10 7
1$
1;
b11 :
1%
#29
